<?xml version="1.0" encoding="UTF-8"?>
<html xmlns:m="http://www.w3.org/1998/Math/MathML" xmlns:svg="http://www.w3.org/2000/svg" xmlns:epub="http://www.idpf.org/2007/ops" xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en" epub:prefix="index: http://www.index.com/">
<head>
<title>Chapter Twenty.-SEVEN The Team Sometimes Communicates through Documents</title>
<link href="../styles/9781351803632.css" rel="stylesheet" type="text/css"/>
</head>
<body epub:type="bodymatter">
<section epub:type="chapter" role="doc-chapter">
<header>
<h1 class="h2" id="chapter27"><span id="p471" aria-label=" page 471. " epub:type="pagebreak" role="doc-pagebreak"/><span class="pd_orange3">CHAPTER</span> <span class="pd_orange1">TWENTY-SEVEN</span> <span class="h2subtitle"><span class="pd_orange1">The Team Sometimes Communicates through <i>Documents</i></span></span></h1>
<p class="doi">DOI: <a aria-label="D.O.I. link to this document." href="https://doi.org/doi/10.1201/b22101-27">10.1201/b22101-27</a></p>
</header>
<figure class="figure" id="fig27_1">
<figcaption>
<p class="title"><span class="pd_orange"><small>FIGURE</small><br/><b>27.1</b></span></p>
<img alt="" src="../images/fig27_1.jpg"/>
</figcaption>
</figure>
<section class="level3">
<h2 class="h3" id="sec27_1"><span id="p472" aria-label=" page 472. " epub:type="pagebreak" role="doc-pagebreak"/><span class="pd_orange">The Myth of the Game Design Document</span></h2>
<p class="noindent">Many novice game designers, and other dreamers, have an interesting vision of how the process of game design works. Not being acquainted with the Rule of the Loop, they believe that the process of game design involves a genius game designer sitting down alone at a keyboard and typing out a glorious and perfect game design document. When this masterpiece is complete, all that needs to be done is to hand it to a competent team of programmers and artists and wait for them to turn this shining vision into a reality. &#8220;If only,&#8221; the frustrated would-be designer thinks, &#8220;I could find out the proper format for a game design document, I could become a professional game designer too! I&#8217;m full of ideas&#8212;but without this magic template, there is no way for me to design games.&#8221;</p>
<p class="indent">It is very important for me to be clear about this next point, so I am going to use a very large font. Please listen closely:</p>
<p class="center">THE MAGIC TEMPLATE DOES NOT EXIST!</p>
<p class="noindent">It never has existed, and it never will exist. Anyone who tells you otherwise is a fool or a liar. Even if such a thing did exist, it&#8217;s not clear that it would be helpful. Consider what designer Jason VandenBerghe has to say about game design documents:</p>
<blockquote>
<p class="quote"><i>The trouble with GDDs is that they are literally out of date the moment you write them. Design documents are an expression of your current theories about what will make your game good&#8230; but until you see those theories in practice, you cannot know. Unfortunately, it is in our nature to treat official documents as though they were specifications, or scripts, or blueprints. They are not - they are theories. Evil abounds when you have a document that some people think is a plan, some people think is a theory, and some people think is a blueprint. Small teams can overcome these inequities through lots of interpersonal communication&#8230; but larger teams will have a much harder time.</i></p>
</blockquote>
<p class="noindent">Does this mean that documents are not a part of game design? No&#8212;documents are a very important part of game design. But documents are different for every game and different for every team. To understand the correct structure of the documents for your game, you must first understand their purpose.</p>
</section>
<section class="level3">
<h2 class="h3" id="sec27_2"><span class="pd_orange">The Purpose of Documents</span></h2>
<p class="noindent">Game documents have exactly two purposes: <b>memory</b> and <b>communication</b>.</p>
<section class="level4">
<h3 class="h4" id="sec27_2_1"><span id="p473" aria-label=" page 473. " epub:type="pagebreak" role="doc-pagebreak"/><span class="pd_orange">Memory</span></h3>
<p class="noindent">Humans have terrible memories. A game design will be full of thousands of important decisions that define how the game works and why. There is a good chance you will not be able to remember them all. When these brilliant ideas are fresh in your mind, you will likely feel that they are impossible to forget. But two weeks and two hundred design decisions later, it is very easy to forget even the most ingenious of solutions. If you get in the habit of recording your design decisions, it will save you the trouble of having to solve the same problems all over again. And moving the design process from my limited working memory into a document helps me think better&#8212;developing an idea on paper or on screen helps me flesh out a creative idea.</p>
</section>
<section class="level4">
<h3 class="h4" id="sec27_2_2"><span class="pd_orange">Communication</span></h3>
<p class="noindent">Even if you are blessed with a perfect memory, though, decisions about the design of your game must be communicated to many other people on the team. Documents are a very effective way to do that. And this communication, as we discussed in <a class="nounder" href="C28_chapter25.xhtml#chapter25">Chapter 25</a>: <a class="nounder" href="C28_chapter25.xhtml#chapter25"><i>Team</i></a>, will be a dialog, for as soon as a decision is put on paper, someone will find a problem with it or come up with a way to make it better. Documents can get more minds on the design faster to more quickly find and fix weaknesses in the game design. So many people need to see and touch these documents; it&#8217;s easy to see why Google Docs has become the standard way to write and update game documents.</p>
</section>
</section>
<section class="level3">
<h2 class="h3" id="sec27_3"><span class="pd_orange">Types of Game Documents</span></h2>
<p class="noindent">Since the purpose of documents is for memory and communication, the types of documents you will need are defined by what needs to be remembered and what needs to be communicated. It is the rare game where one document serves all necessary purposes&#8212;usually it makes sense to create several different kinds of documents. There are six main groups that need to remember and communicate different things, and each generates its own special kind of documents.</p>
<figure class="figure" id="fig27_2">
<figcaption>
<p class="title"><span class="pd_orange"><small>FIGURE</small><br/><b>27.2</b></span></p>
<img alt="" src="../images/fig27_2.jpg"/>
</figcaption>
</figure>
<p class="indent"><span id="p474" aria-label=" page 474. " epub:type="pagebreak" role="doc-pagebreak"/>The preceding figure shows some possible paths of memory and communication on a game design team. Each arrow could be a document or more than one document. Let&#8217;s look at each of the six groups and what documents they might create.</p>
<section class="level4">
<h3 class="h4" id="sec27_3_1"><span class="pd_orange">Design</span></h3>
<ul class="list-simple">
<li><p class="list-item3">1. <b>Game design overview</b>: This high-level document might only be a few pages. It is often written primarily for management so that they can understand enough about what this game is and who it is for, without getting into too much detail. The overview document can be useful for the whole team to get a sense of the big picture of the game. Designer Stone Librande gives excellent advice: every game should be explainable in a diagram on a poster that explains how the whole game fits together.</p></li>
<li><p class="list-item3">2. <b>Detailed design document</b>: This document is the one that describes all the game mechanics and interfaces in great detail. This document usually serves two purposes: so the designers remember all the little detailed ideas they came up with and help communicate those ideas to the engineers who have to code them and the artists who need to make them look nice. Since this document is seldom seen by &#8220;outsiders,&#8221; it is usually a terrible mess with just enough detail to spark discussion and keep important ideas from being forgotten. It is often the thickest of the documents and is seldom kept up to date. Halfway through the project, it is often abandoned entirely&#8212;by that point, the game itself contains most of the important details, and the ones not in there are often exchanged through informal means, such as e-mails or short pages of notes. At the beginning of a project, though, finding the right form for your design documents is important. In most cases, it is much better to have many small documents detailing the various subsystems of the game than one giant document. Designer Rich Marmura puts it well, &#8220;My philosophy on GDDs (Game Design Documents) is that I tailor them to the team I am working with. While the GDD is a place to organize my thoughts, it must also be a place where team members go for information and clarity. While a common core may remain consistent across GDDs, much of the structure and style change with the game. Just as no two teams or games are ever the same, no two GDDs should ever be the same.&#8221;</p></li>
<li><p class="list-item3">3. <b>Story overview</b>: Many games call for professional writers who will create dialog and narration for the game. These writers are often contracted and often far away from the rest of the team. The game designers often find it necessary to create a short document that describes the important settings, characters, and actions that will take place in the game. Frequently, the writers respond to this with interesting new ideas that change the whole game design.</p></li>
</ul>
</section>
<section class="level4">
<h3 class="h4" id="sec27_3_2"><span id="p475" aria-label=" page 475. " epub:type="pagebreak" role="doc-pagebreak"/><span class="pd_orange">Engineering</span></h3>
<ul class="list-simple">
<li><p class="list-item3">4. <b>Technical design document</b>: Often, a videogame has many complex systems that have nothing to do with game mechanics and everything to do with getting things to appear on the screen, sending data over networks, and other crunchy technical tasks. Usually, no one outside the engineering team cares much about these details, but if the engineering team is more than one person, it often makes sense to record these details in a document so that when others join the team, they can understand how the whole thing is supposed to work. Like the detailed design document, it is rare for this to stay up to date more than halfway through a project, but writing this document is often essential to getting the necessary systems architected and the coding underway.</p></li>
<li><p class="list-item3">5. <b>Pipeline overview</b>: Much of the challenging work of engineering a videogame comes from properly integrating art assets into the game. There are often special &#8220;do&#8217;s and don&#8217;ts&#8221; the artists must adhere to, if the art is to appear properly in the game. This brief document is usually generated by the engineers explicitly for the art team, and the simpler it is, the better.</p></li>
<li><p class="list-item3">6. <b>System limitations</b>: Designers and artists are often completely unaware of what is and is not possible on the system they are designing for (or so they pretend). For some games, the engineers find it useful to create documents that make clear certain limits that should not be crossed&#8212;number of polygons on the screen at once, number of update messages sent per second, number of simultaneous explosions on screen at once, etc. Often this information is not so cut and dried, but trying to establish it (and get it in writing) can save a lot of time later&#8212;and it can help foster discussions about creative solutions to get past these limits.</p></li>
</ul>
</section>
<section class="level4">
<h3 class="h4" id="sec27_3_3"><span class="pd_orange">Art</span></h3>
<ul class="list-simple">
<li><p class="list-item3">7. <b>Art bible</b>: If several artists are going to work together on a title to create a single, consistent look and feel, they must have some guidelines to help maintain this consistency. An &#8220;art bible&#8221; is simply a document that provides these guidelines. These might be character sheets, examples of environments, examples of color usage, examples of interface, or anything else that defines the look of any element in the game.</p></li>
<li><p class="list-item3">8. <b>Concept art overview</b>: There are many people on the team that need to understand what the game is going to look like before it is built. This is the job of concept art. The art alone doesn&#8217;t usually tell the story, though&#8212;it often makes the most sense in a design document, so often the art team works with the design team to come up with a set of images that show how they will look and feel in the context of the game design. These early images end up everywhere&#8212;in the <span id="p476" aria-label=" page 476. " epub:type="pagebreak" role="doc-pagebreak"/>game design overview, in the detailed design document, and sometimes even in technical documents, to illustrate the type of look that the technology is striving to achieve.</p></li>
</ul>
</section>
<section class="level4">
<h3 class="h4" id="sec27_3_4"><span class="pd_orange">Production</span></h3>
<ul class="list-simple">
<li><p class="list-item3">9. <b>Game budget</b>: While we would all like to just &#8220;work on the game until it is done,&#8221; the economic realities of the game business seldom allow this. Usually, the team is required to come up with a cost to develop the game before they completely understand what they are building. This cost is usually arrived at through a document, usually a spreadsheet, that attempts to list all the work that needs to be done to complete the game and complete with time estimates that translate into dollars. It is impossible for the producer or project manager to come up with these numbers on their own, so they generally work closely with every part of the team to make the estimates as accurate as possible. Often this document is one of the first created, since it is used to help secure the funding for the project. A good project manager will continue to evolve this document throughout the project to ensure that the project does not go over the budget it has been allocated.</p></li>
<li><p class="list-item4">10. <b>Asset tracker</b>: Somehow, be it with a simple spreadsheet or a more formal system, you need to keep track of what has been created and what state it is in. This goes for code, game levels, art assets, sound and music, and design documents. A very important aspect of asset tracking is approvals: have the right people approved each asset?</p></li>
<li><p class="list-item4">11. <b>Project schedule</b>: On a well-run project, this document will be the one most frequently updated. We know the process of game design and development is rife with surprises and unexpected changes. Nevertheless, some kind of planning is necessary, ideally planning that can change on a weekly basis at the least. A good project schedule document lists all the tasks that need to be accomplished, how long each will take, when each task must be completed, and who will do them. Hopefully, this document will take into account the fact that a single person shouldn&#8217;t do more than forty hours in a week and the fact that some tasks can&#8217;t be started until others are completed. Sometimes this schedule is kept on a spreadsheet and other times on more formal project management software. Keeping this document up to date can easily be a full-time job on a medium-sized or larger game.</p></li>
</ul>
</section>
<section class="level4">
<h3 class="h4" id="sec27_3_5"><span class="pd_orange">Writing</span></h3>
<ul class="list-simple">
<li><p class="list-item4">12. <b>Story bible</b>: While one might think that the story of the game might be determined entirely by the writers (if any) on the project, it is often the case that everyone on the project contributes meaningful changes to the story. The <span id="p477" aria-label=" page 477. " epub:type="pagebreak" role="doc-pagebreak"/>engine programmers might realize that a certain story element is going to be too much of a technical challenge, and they might propose a story change. The artists might have a visual idea for a whole new part of the story that the writers never imagined. The game designers might have some ideas for gameplay concepts that require story changes. A story bible that lays down the law about what is and is not possible in this story world makes it much easier for everyone on the team to contribute story ideas, and ultimately this makes for a stronger story world that is well integrated with art, technology, and gameplay.</p></li>
<li><p class="list-item4">13. <b>Script</b>: If the NPCs in the game are going to talk, their dialog has to come from somewhere! This dialog is often written in a script document that is either separate from or an appendix to the detailed design document. It is crucial that the game designers review all of the dialog, since it is all too easy for a line of dialog to be inconsistent with a rule of gameplay.</p></li>
<li><p class="list-item4">14. <b>Game tutorial and manual</b>: Videogames are complex, and the players have to learn how to play them somehow. In-game tutorials, web pages, and printed manuals are how this usually happens. The text that goes into these is important&#8212;if players can&#8217;t understand your game, how can they enjoy it? The details of your game design will likely continue to change up until the last minute of development, so it is important to be sure someone is continually checking this text to make sure it is still accurate with the game implementation.</p></li>
</ul>
</section>
<section class="level4">
<h3 class="h4" id="sec27_3_6"><span class="pd_orange">Players</span></h3>
<ul class="list-simple">
<li><p class="list-item4">15. <b>Game walk-through</b>: The developers aren&#8217;t the only ones who make documents about the game! If players like a game, they are going to write their own documents about it and post them online. Studying what your players write about your game can be a great way to find out, in detail, what players like and dislike about your game, which parts are too hard, and which are too easy. By the time a player walk-through is written, of course, it is often too late to change your game&#8212;but at least you&#8217;ll know for next time!</p></li>
</ul>
<p class="noindent">Again, these documents are not a magic template&#8212;there is no magic template! Each game is different and will have different needs in terms of both memory and communication that you will have to discover for yourself.</p>
</section>
</section>
<section class="level3">
<h2 class="h3" id="sec27_4"><span class="pd_orange">So, Where Do I Start?</span></h2>
<p class="noindent">You start simply, just like you did when you started designing your game. Start with a document that is a rough bullet list of the ideas you want to include in your game. As the list grows, questions will arise in your mind about the design&#8212;these <span id="p478" aria-label=" page 478. " epub:type="pagebreak" role="doc-pagebreak"/>questions are crucial! Write them down so you don&#8217;t forget them! &#8220;Working on your design&#8221; will mostly mean answering these questions, so you don&#8217;t want to lose the questions. Each time you answer a question to your satisfaction, make a note of the decision and the reason why you made it. Gradually, your list of ideas, plans, questions, and answers will grow and start to fall naturally into sections. Keep writing down the things you need to remember and the things you need to communicate. Before you know it, you will have a design document&#8212;not one based on a magic template but one that grew organically around the unique design of your unique game.</p>
<aside class="boxed-text" epub:type="tip" role="doc-tip" id="box102">
<h2 class="box-title"><a href="C02b_tol.xhtml#rbox102"><span class="pd_whitez">#102 The Lens of Documentation</span></a></h2>
<p class="noindent">To ensure you are writing the documents you need and skipping the ones you don&#8217;t, ask yourself these questions:</p>
<ul class="list-bullet">
<li><p class="list">What do we need to remember while making this game?</p></li>
<li><p class="list">What needs to be communicated while making this game?</p></li>
</ul>
<figure class="informalfigure">
<img alt="" class="border1" src="../images/un27_1.jpg"/>
<figcaption>
<p class="credit"><i>Illustration by Nick Daniel</i></p>
</figcaption>
</figure>
</aside>
</section>
<section class="level3">
<h2 class="h3" id="sec27_5"><span class="pd_orange">Other Reading to Consider</span></h2>
<ul class="list-simple1">
<li><p class="list-item1"><b><i>Game Design Logs by</i> Daniel Cook</b>. This excellent entry in Dan&#8217;s Lost Garden blog provides an excellent solution to the problem of stale design documents.</p></li>
<li><p class="list-item1"><b><i>One Page Designs</i> by Stone Librande</b>. This talk changed the game industry overnight when Stone gave it at GDC 2010. It was so obvious to everyone that this was the best method to create design overviews that it became an industry standard overnight. Slides from the presentation can be found here: <a class="nounder" href="http://www.stonetronix.com">http://www.stonetronix.com/gdc-2010/</a>.</p></li>
</ul>
</section>
</section>
</body>
</html>