<?xml version="1.0" encoding="UTF-8"?>
<html xmlns:m="http://www.w3.org/1998/Math/MathML" xmlns:svg="http://www.w3.org/2000/svg" xmlns:epub="http://www.idpf.org/2007/ops" xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en" epub:prefix="index: http://www.index.com/">
<head>
<title>Chapter Twenty.-SIX The Designer Usually Works with a Team</title>
<link href="../styles/9781351803632.css" rel="stylesheet" type="text/css"/>
</head>
<body epub:type="bodymatter">
<section epub:type="chapter" role="doc-chapter">
<header>
<h1 class="h2" id="chapter26"><span id="p459" aria-label=" page 459. " epub:type="pagebreak" role="doc-pagebreak"/><span class="pd_orange3">CHAPTER</span> <span class="pd_orange1">TWENTY-SIX</span> <span class="h2subtitle"><span class="pd_orange1">The Designer Usually Works with a <i>Team</i></span></span></h1>
<p class="doi">DOI: <a aria-label="D.O.I. link to this document." href="https://doi.org/doi/10.1201/b22101-26">10.1201/b22101-26</a></p>
</header>
<figure class="figure" id="fig26_1">
<figcaption>
<p class="title"><span class="pd_orange"><small>FIGURE</small><br/><b>26.1</b></span></p>
<img alt="" src="../images/fig26_1.jpg"/>
</figcaption>
</figure>
<section class="level3">
<h2 class="h3" id="sec26_1"><span id="p460" aria-label=" page 460. " epub:type="pagebreak" role="doc-pagebreak"/><span class="pd_orange">The Secret of Successful Teamwork</span></h2>
<p class="noindent">To create a modern videogame, a team of tremendous diversity is required. You need a team of people with a wide variety of artistic, technical, design, and business skills. They generally have very different backgrounds and value very different things. But if your game is going to be a great one, they will all have to pull together and set aside differences and disagreements to make the game as great as it can be.</p>
<p class="indent">And there is a simple secret shared by all teams that have ever successfully collaborated to make something great. It is so simple that when you hear it, you will likely think I&#8217;m not being serious. But this is the most serious thing I will say in this book.</p>
<blockquote>
<p class="quote"><i>The secret to successful teamwork is love.</i></p>
</blockquote>
<p class="noindent">No, really.</p>
<p class="indent">Now, by this, I don&#8217;t mean that if the team hold hands and sings &#8220;Kumbaya,&#8221; you are going to make a great game. I don&#8217;t even mean that you have to like the other people on the team, although it wouldn&#8217;t hurt.</p>
<p class="indent">What I mean is that you have to love the game you are making. For if everyone on the team has a deep and true love for the game they are making together and for the audience they are making it for, all differences and disagreements will be set aside in service of bringing the game into existence and making it be as wonderful as it can possibly be.</p>
<p class="indent">Developers lucky enough to have been on a team that truly loves the game they are making will know just what I mean. Everyone on the team feels like children anticipating Christmas when they think about the game getting finished and they think about that constantly.</p>
<p class="indent">Similarly, developers who have been on a team that had some kind of &#8220;love deficit&#8221; will also know what I mean. There are three main kinds of problems when it comes to team love for their game:</p>
<ul class="list-bullet">
<li><p class="list"><b>Love problem #1: Team members incapable of loving any game</b>. Though it is difficult to understand, some people get into the games business even though they have no particular love for games or the people who play them. When someone like this is on your team, it is like carrying deadweight. They often contribute little of use and constantly waste time arguing with team members who actually love the work. Unfortunately, the team members in charge of management or budget are most likely to have this affliction. Regardless, there is only one cure for a team member with this problem: get them off the team.</p></li>
<li><p class="list"><b>Love problem #2: Team members in love with a different game than the one they are making</b>. This problem comes in many shapes and sizes: a level designer who only loves first-person shooters, forced to work on a role-playing game; an engineer who only loves games with cutting-edge graphics, forced to work on a simple web-based game; and an artist who loves the work of <span id="p461" aria-label=" page 461. " epub:type="pagebreak" role="doc-pagebreak"/>H.R. Giger, forced to develop a new game featuring the Care Bears. When you find members of your team have this problem, the key is to work with them, to see if there is something about the current game that they can fall in love with&#8212;or perhaps they have some idea for a new feature or element that will take the current game somewhere new and different. On the pirates game I mentioned in an earlier chapter, we ran into a love problem early on. The animators on the team were eagerly looking forward to animating exciting pirate characters for the game. But as the design proceeded, it became clear that this would be a game about ships&#8212;the only people in it would be far away and so tiny as to be incapable of any meaningful action or emotion. The animators tried to fight this for a while but gradually realized it was a losing battle, and they clearly began losing their love for the game, discussing it in tones of quiet detachment. Several of us on the team saw this as a major problem&#8212;we needed the animators to put their heart and souls into making beautiful effects animations, but they seemed so disappointed they wouldn&#8217;t be able to animate characters, which didn&#8217;t seem possible. Then, in one meeting, everything changed. One of the animators brought a big sheaf of papers. &#8220;Look, I&#8217;ve been thinking about this game, and at first, I was really bummed that we cut all the characters, but then I started thinking the stars of this show are the ships&#8212;what could I do to make them cool?&#8221; He then proceeded to show pages and pages of sketches of how the ships would explode into pieces, how their masts would crack and break and crash into the sea, and how their sails would rip and tear and flap when hit with cannonballs&#8212;it was truly inspiring to everyone. Immediately, other animators were excitedly competing to see who could come up with the coolest effects. This shift in perspective turned a project they hated into one they loved, and it made a huge difference in game quality.</p></li>
<li><p class="list"><b>Love problem #3: Team members in love with different visions of the same game</b>. This is the most common, and the most challenging love problem. In this situation, a team is full of people passionate about building a game, but everyone has very different ideas about what the game will be like. The key to avoiding this problem is to get everyone on the same page about what the design is as soon as possible. There will be arguments and disagreements, but if everyone hears them out and respectfully considers the ideas that others present, the team can work toward that all-important thing&#8212;a shared vision of something that all the team members love. But it can only happen with thorough communication and respect. The moment you sense that someone in a meeting doesn&#8217;t buy into an idea (even if they verbally claim they agree with it), you must stop everything, find out why, and try to find a way to get them on board. If you don&#8217;t, they may secretly disagree with the direction and lose their love for the game. And when that happens, the valuable contributions they would have made are lost. No decision should be final until the team agrees that it is final.</p></li>
</ul>
<section class="level4">
<h3 class="h4" id="sec26_1_1"><span id="p462" aria-label=" page 462. " epub:type="pagebreak" role="doc-pagebreak"/><span class="pd_orange">If You Can&#8217;t Love the Game, Love the Audience</span></h3>
<p class="noindent">Getting others to love the game is part of your responsibility as a designer. But what about that terrible situation when, horror of horrors, you realize that you yourself do not love the game you are working on? Again, this is not something you can ignore or hope will remedy itself. Unless you find a way to love your game, the game you create will be mediocre at best, because the insincerity of your contribution will show through. So when your love for your game lapses, you must find a way to restore it. But how?</p>
<p class="indent">One way, as mentioned earlier, is to search long and hard for something in the game that you do love&#8212;perhaps it is a moment, or a clever mechanic, or a slick interface. If you can find just one thing that you are excited about and can be proud of, it can sometimes be enough to make the whole project worthwhile for you&#8212;enough to make you love the game and work hard to make the game succeed.</p>
<p class="indent">But perhaps you can&#8217;t find that one thing to love, perhaps because you are not the target audience for the game. In that case, don&#8217;t think of it as a game for you&#8212;think of it as what it really is, a game for the intended audience. Think of a time when you went through a great deal of preparation to give someone you love a special gift. Think how excited you were about seeing the expression on their face when they opened it up and saw it. The anticipation of this moment made you put so much thoughtful energy into the gift choice, the wrapping, and the presentation of it. You carefully designed that moment, because you loved that person and you wanted to see that moment when they were so happy. And what was it that made them happy? Just the gift? Surely not. What made them so happy was that you loved them so much that you created that special moment just for them. The love you put into that moment shone through and into their hearts. If you can take that kind of love and put it into the game you are creating for your audience, the love will shine through the game and into the hearts of your audience. The game will feel special to them, as they realize that someone really cared how they would feel when they played the game, and knowing that someone cares about you is a very special feeling. A designer cannot fake this&#8212;you must really feel it. As the great magician Henry Thurston once said:</p>
<blockquote>
<p class="quote"><i>Long experience has taught me that the crux of my fortunes is whether I can radiate good will toward my audience. There is only one way to do it and that is to feel it. You can fool the eyes and minds of the audience, but you cannot fool their hearts.</i></p>
</blockquote>
<p class="noindent">If even this does not work for you, if you find that not only do you not love your game, but you have no particular love for your audience, only one thing remains: to pretend. This sounds like an insincere thing to do. Didn&#8217;t we just say that love cannot be faked? But something strange happens when we pretend to love things&#8212;sometimes real love starts to emerge. Have you ever been part of a group that has to do some dreary task together? Perhaps a day of spring cleaning. Everyone is <span id="p463" aria-label=" page 463. " epub:type="pagebreak" role="doc-pagebreak"/>dreading it and moping about it. Then one person says, half-jokingly, &#8220;Come on, everybody, this is gonna be awesome! We&#8217;re going to have so much fun!&#8221; Everyone chuckles at the sarcasm and, just for fun, starts approaching the activity with a pretend &#8220;this is going to be awesome&#8221; attitude. And just by pretending this, soon the activity does start to become fun&#8212;and ironically, everyone starts to love it. If you don&#8217;t know how to love something, just ask yourself what kinds of things someone who really loved the game would say and do, and start doing those things. You may be surprised at the transformation that starts to take place within yourself.</p>
<aside class="boxed-text" epub:type="tip" role="doc-tip" id="box100">
<h2 class="box-title"><a href="C02b_tol.xhtml#rbox100"><span class="pd_whitez">#100 The Lens of Love</span></a></h2>
<p class="noindent">To use this lens, ask yourself these questions:</p>
<ul class="list-bullet">
<li><p class="list">Do I love my project? If not, how can I change that?</p></li>
<li><p class="list">Does everyone on the team love the project? If not, how can that be changed?</p></li>
</ul>
<figure class="informalfigure">
<img alt="" class="border1" src="../images/un26_1.jpg"/>
<figcaption>
<p class="credit"><i>Illustration by Nick Daniel</i></p>
</figcaption>
</figure>
</aside>
<p class="indent">Again, I am completely sincere when I say that team love for the game is the most important factor determining whether the team will succeed. Love is not a luxury&#8212;it is a necessity if you are to have any hope at all of producing a great game.</p>
</section>
</section>
<section class="level3">
<h2 class="h3" id="sec26_2"><span class="pd_orange">Designing Together</span></h2>
<p class="noindent">We forgot one important variation on our magic words:</p>
<blockquote>
<p class="quote">
<b>I am <i>a</i> game designer.</b></p>
</blockquote>
<p class="noindent">If everyone on the team loves the project, that&#8217;s great! But it gives you a new problem&#8212;everyone is going to have opinions about the design! For some designers, this is terrifying&#8212;the idea that other members of the team want to contribute design ideas threatens their status as designer and puts them in a position where <span id="p464" aria-label=" page 464. " epub:type="pagebreak" role="doc-pagebreak"/>they have to argue with others about the &#8220;right&#8221; design for the game. These designers often choose to withdraw from the team, ignore these opinions, and produce a design completely independent from the rest of the team. The effect is predictable: all the beautiful ideas that each team member had for the game have been crushed, and the love they had for the game dries up and blows away. The designer becomes frustrated with the team because they seem unwilling and unable to realize the designer&#8217;s glorious vision, and the game, as you might expect, pleases no one.</p>
<p class="indent">A much more successful approach is to include the team whenever possible in the design process. If you can set your ego aside, you will quickly realize that most of the people on the team with design ideas don&#8217;t want to hijack the game design&#8212;they just want their ideas to be heard, because they, too, want the game to be great! If you include everyone in the design process, taking every idea and suggestion seriously, you will</p>
<ul class="list-bullet">
<li><p class="list">Have more ideas to choose from</p></li>
<li><p class="list">Weed out flawed ideas quickly</p></li>
<li><p class="list">Be forced to view the game from many perspectives</p></li>
<li><p class="list">Make everyone on the team feel like they own the design</p></li>
</ul>
<p class="noindent">When the whole team participates in the design, your game will be stronger, and everyone will embark on implementation with confidence that they understand the design. This is very important, because not all design decisions get made ahead of time. Hundreds of tiny decisions get made all the time&#8212;not by the designer but by the programmers, artists, and executives working on the game. If all of these people have a solid, shared understanding of the game design, these little decisions will all reinforce the design of the game, and the project will have a unified robustness and solidity that it can&#8217;t get any other way. It is not uncommon for many different people on a project to feel that their contribution was the most important part of the game&#8212;and not unhealthy, either! This just means that many different team members feel personal ownership and responsibility for that game. One great way to amplify this feeling is to avoid &#8220;overfleshing&#8221; your designs. If you leave some ambiguity in the detailed design of your game, particularly for parts you aren&#8217;t sure about, it forces the developers working on that section of the game to think about what that section of the game should be like and to come up with ideas for how to implement those fine details. Since they are often closest to that part of the game, their instincts about detailed design are often quite good&#8212;and if their ideas are good ones and go into the game, they will feel real pride of ownership of those parts of the game.</p>
<p class="indent">Does this mean you have to have everyone involved in the design all the time? Not everyone has the stamina to spend three hours debating the right way to lay out the inventory interface, so for detailed discussions, you will probably want to establish a core design team based on who on the team is both interested and productive at these kinds of sessions. But after this core team has come to consensus <span id="p465" aria-label=" page 465. " epub:type="pagebreak" role="doc-pagebreak"/>about how a design should work, you should present these ideas to the rest as soon as possible. A typical process looks something like the following:</p>
<ol class="list-order">
<li><p class="list"><b>Initial brainstorming</b>: Involves as much of the team as possible.</p></li>
<li><p class="list"><b>Independent design</b>: Core design team members think about ideas independently.</p></li>
<li><p class="list"><b>Design discussion</b>: Core design members bring their independent ideas together to discuss and try to come to consensus on ideas.</p></li>
<li><p class="list"><b>Design presentation</b>: The core design team presents their progress to the whole team, allowing time for comments and criticism. This identifies new problems and often turns into brainstorming, kicking off the next round of the iterative cycle.</p></li>
</ol>
<p class="noindent">It takes both time and energy to involve the whole team in the design, but you will find that it makes the game stronger in the long run, provided your team is able to communicate.</p>
</section>
<section class="level3">
<h2 class="h3" id="sec26_3"><span class="pd_orange">Team Communication</span></h2>
<blockquote>
<p class="quote"><i>Teamwork is not a virtue. It is a choice.</i></p>
<p class="right">&#8212;Patrick Lencioni</p>
</blockquote>
<p class="noindent">Hundreds of books have been written about how to facilitate good team communication. I&#8217;m going to boil it down here to ten key issues that are particularly pertinent for game design. You might think these things sound basic, and they are&#8212;but mastery of the basics is essential for excellence in any field, especially something as complicated as game design by a team. Without further ado, the ten keys to team communication are as follows:</p>
<ol class="list-order">
<li><p class="list"><b>Objectivity</b>: This one is listed first because it is the most likely to go wrong. In the passionate throes of design ecstasy, it is easy to become attached to an idea that struck you like white lightning from heaven. But if other team members don&#8217;t like your idea, where are you then? Nowhere, if you are going to fight a war of opinions and gut feelings. The tool that will rescue you is <a href="C10_chapter7.xhtml#box14">Lens #14</a>: <i><a href="C10_chapter7.xhtml#box14">Problem Statement</a></i>. It can give you the objectivity you need. All team discussion must focus on how well-designed ideas solve the problems at hand. Personal preferences about these ideas don&#8217;t matter&#8212;all that matters is whether the ideas solve the problem. Don&#8217;t even talk about the idea as &#8220;my idea&#8221; or &#8220;Sue&#8217;s idea&#8221;&#8212;speak objectively: &#8220;The spaceship idea.&#8221; Not only will this separate the ideas from the individuals (giving them over to the team), but it will be clearer, as well. Another nice trick (which I learned from Randy Pausch) is to phrase alternatives as questions. For example, instead of saying &#8220;A is no good. I like B better,&#8221; simply saying &#8220;What if we did B instead of A?&#8221; <span id="p466" aria-label=" page 466. " epub:type="pagebreak" role="doc-pagebreak"/>lets the group collectively discuss the relative merits of B and A. It&#8217;s a subtle difference, but much about mastering team communication is subtle. If you can develop good habits of objectivity as a designer, everyone will bring you design questions to answer without hesitation, because they know there is no danger of an awkward situation when you &#8220;pass judgment&#8221; on the design&#8212;they will just get honest, objective, useful feedback. Further, people will want to include you in every design session, because by bringing a tone of objectivity to the room, your presence can help defuse tense struggles between people taking a less objective attitude. And best of all, when a team design session has a tone of objectivity, every idea is taken seriously, which means that even shy team members will feel they can speak freely, and many ideas that might have hidden, trembling in the shadows, will confidently come to light.</p></li>
<li><p class="list"><b>Clarity</b>: This one is simple. If communication is not clear, there is going to be confusion. When you explain something, check to see if people understand what you mean. Illustrate your ideas when possible. And if someone else says something that isn&#8217;t clear, don&#8217;t ever pretend you understand what they are saying. No matter how embarrassed you are, keep asking questions until you understand what they mean. Because if everyone on the design team isn&#8217;t on the same page, how can there be any meaningful communication? But understanding each other is only half of clarity&#8212;the other half is getting concrete and specific. There is a big difference between saying to your producer &#8220;I&#8217;ll design the combat system by Thursday&#8221; and saying &#8220;I&#8217;ll e-mail you a 3&#8211;5-page description of the interface for the turn-based combat system by this Thursday at 5 p.m.&#8221; The first throws wide the door for miscommunication, but the second gives important details about a specific deliverable, leaving little room for misunderstanding.</p></li>
<li><p class="list"><b>Persistence</b>: WRITE THINGS DOWN! There, I said it! Verbal communication is momentary&#8212;easily misunderstood and forgotten. Things that are recorded can be checked later by everyone on the team. And you should use every persistent medium that might be useful to you&#8212;notebooks, e-mail, forums, mailing lists, fileshares, wikis, printed documents, etc. Make sure someone in every design meeting is taking notes that can be shared with the team. On many teams, the producer is charged with this responsibility. When you do send an e-mail about a design topic, make sure to include everyone on the team. This avoids the danger of people being left out or even just feeling left out.</p></li>
<li><p class="list"><b>Comfort</b>: I know this one sounds a little silly. What does comfort have to do with communication? Simply this: when people are comfortable, they are less distracted and communicate more freely. Make sure your team has a place to communicate that is quiet and with the right temperature, has enough chairs, and has a large writing surface; in short, it is a place that is physically comfortable. Also, you need to make sure team members aren&#8217;t hungry, thirsty, or overtired. People who are physically uncomfortable will be terrible communicators. And physical comfort isn&#8217;t enough&#8212;they must also be emotionally comfortable, which leads us to our next item.</p></li>
<li><p class="list"><span id="p467" aria-label=" page 467. " epub:type="pagebreak" role="doc-pagebreak"/><b>Respect</b>: We have discussed how the secret to being a good designer is to be a good listener. Well, the secret to good listening is to respect the person you are listening to. People who do not feel respected tend to speak little, and when they do speak, they often are not honest about their feelings, for fear they will be judged harshly. People who feel respected speak freely, openly, and honestly. Respecting people is easy, if you can remember to do it. Simply treat them, at every moment, how you would like to be treated. Don&#8217;t cut them off or roll your eyes, even if you think what they are saying is foolish. Be polite and patient at all times. Find nice things to say, even if you have to stretch a little. Keep in mind that others are more like you than unlike you&#8212;look for things you have in common, for it is easiest to respect people like ourselves. When all else fails, repeat this mantra to yourself: &#8220;What if I&#8217;m wrong?&#8221; If you somehow insult or offend someone, do not rush to defend what you have said. Rush instead to apologize and do so sincerely. For if you can manage to respect your teammates at all times, they cannot help but respect you. And when everyone feels respected, they will communicate at their best.</p></li>
<li><p class="list"><b>Trust</b>: Respect is impossible without trust, and vice versa&#8212;if I can&#8217;t trust what you say and do, how can I know whether you respect me? Trust is not something that works on faith alone&#8212;relationships of trust gradually build up over time. For this reason, the quality of communication matters much less than the quantity of communication. People who see each other day in and day out, constantly talking, constantly solving problems together, gradually learn how much they can trust each other, and when. A group of people who barely know each other and only meet once a month have no idea who can be trusted with what. This is one area where digital communication isn&#8217;t good enough&#8212;there is something in the nuance of face-to-face communication that allows us to make subconscious decisions about how and when to trust people. The easiest way to figure out who trusts who on a team is to observe who eats lunch together. Most animals are very selective about who they eat with, and humans are no exception. If the artists eat separately from the programmers, there is a good chance the team has pipeline problems. If the Xbox team eats separately from the PlayStation team, there are often porting problems. Give your team every opportunity to be together and to communicate together, even if it is not about things to do with your project, for the more high-bandwidth communication (about anything!) that your team can have, the more they will learn how to trust each other&#8212;this is the reason so few game studios have individual offices, preferring instead to seat teams together in open offices where they can&#8217;t help but have constant face-to-face communication with one another all day long.</p></li>
<li><p class="list"><b>Honesty</b>: Just as comfort depends on respect and respect depends on trust, trust depends on honesty. If you have somehow developed a reputation for dishonesty in some area, even if it has nothing to do with game design or development, others will be afraid to be honest with you, which will inhibit team communication. Game development can sometimes get very political, and you will surely <span id="p468" aria-label=" page 468. " epub:type="pagebreak" role="doc-pagebreak"/>have to stretch the truth about some things from time to time&#8212;but your team must always feel certain they are getting the truth from you, or team communication will be strained.</p></li>
<li><p class="list"><b>Privacy</b>: Being honest isn&#8217;t always easy, because sometimes the truth can be painful. And even though we all hope to stay objective in our design work, there are times when personal pride and ego are necessarily tangled up in our work. Talking about these things honestly in a public forum can be difficult or impossible. People will tell you their true feelings in a one-on-one conversation much more easily than in public. Take the time to speak privately with each member of the team when you can&#8212;they will often present ideas and discuss problems they simply did not feel comfortable discussing publicly. These one-on-one conversations also go a long way to help build trust, as well, creating a virtuous circle: more trust leads to more honest communication, which leads to still more trust, and so on.</p></li>
<li><p class="list"><b>Unity</b>: During the design process, there will be many conflicting opinions and arguments about what is right for the game. This is healthy and natural. Ultimately, though, the team must arrive at a decision everyone agrees upon. Keep in mind that it takes two people to have a disagreement. If one member of the team is stubborn on a particular point, you must treat them with the respect they deserve and work with them until a meaningful compromise can be found. Asking them to explain why this point is so important to them can often make the rest of the team understand why the point is important. When this fails, an excellent question to ask is, &#8220;What would it take to bring you in?&#8221; You may not be able to settle this difference in opinion immediately, but the one thing you cannot do is ignore it. Intel has a wonderful phrase they use in these situations: &#8220;disagree and commit.&#8221; We can&#8217;t always agree on the best path, but we can come to agreement on what we are going to do right now. Team members need to sometimes be able to agree to go down a path they don&#8217;t agree with for the sake of team unity. If they can&#8217;t do this, it will show in the game. Just as a single cylinder not firing in a car engine cuts performance in half and ultimately ruins the engine, one team member who does not buy into the design slows the efforts of everyone on the team and can, in the end, tear the team apart. The goal of communication is unity.</p></li>
<li><p class="list"><b>Love</b>: Where else could this chain possibly lead? And it is indeed a chain. Without objectivity, clarity, persistence, comfort, respect, trust, honesty, privacy, and unity, the love a team has for the game will be jeopardized. But if you have all these things, the team&#8217;s love for the game will shine through, and you will have no choice but to make an incredible game.</p></li>
</ol>
<p class="noindent">Game design and development are hard. Unless you are multitalented and your project is tiny, you can&#8217;t do it alone. People are more important than ideas, because, in the words of Pixar&#8217;s Ed Catmull, &#8220;If you give a good idea to a mediocre group, they&#8217;ll screw it up. If you give a mediocre idea to a good group, they&#8217;ll fix it.&#8221;</p>
<aside class="boxed-text" epub:type="tip" role="doc-tip" id="box101">
<h2 class="box-title"><span id="p469" aria-label=" page 469. " epub:type="pagebreak" role="doc-pagebreak"/><a href="C02b_tol.xhtml#rbox101"><span class="pd_whitez">#101 The Lens of the Team</span></a></h2>
<p class="noindent">To make sure your team is operating like a well-oiled machine, ask yourself these questions:</p>
<ul class="list-bullet">
<li><p class="list">Is this the right team for this project? Why?</p></li>
<li><p class="list">Is the team communicating objectively?</p></li>
<li><p class="list">Is the team communicating clearly?</p></li>
<li><p class="list">Is the team comfortable with each other?</p></li>
<li><p class="list">Is there an air of trust and respect among the team?</p></li>
<li><p class="list">Is the team ultimately able to unify around decisions?</p></li>
</ul>
<figure class="informalfigure">
<img alt="" class="border1" src="../images/un26_2.jpg"/>
<figcaption>
<p class="credit"><i>Illustration by Nick Daniel</i></p>
</figcaption>
</figure>
</aside>
<p class="indent">You might think that all this team talk has nothing to do with design and that if other people on the team don&#8217;t do their jobs, it has nothing to do with you as a designer. And that may be true, but it has everything to do with the game that gets created. Since everyone who touches a game exerts some influence on its design, you need everyone on the team to pull together, if the glorious vision you share is ever to come to light.</p>
<p class="indent">Now, with all this team communication going on, someone is going to write some documents&#8212;and that is the subject of our next chapter.</p>
</section>
<section class="level3">
<h2 class="h3" id="sec26_4"><span class="pd_orange">Other Reading to Consider</span></h2>
<ul class="list-simple1">
<li><p class="list-item1"><b><i>The Advantage</i> by Patrick Lencioni</b>. This book has everything you need to know about how to foster a healthy development team.</p></li>
<li><p class="list-item1"><b><i>The Cabal: Valve&#8217;s Process for Creating Half-Life</i> by Ken Birdwell</b>. The best article I know about best practices for team game design. <a class="nounder" href="http://www.gamasutra.com">http://www.gamasutra.com/view/feature/131815/the_cabal_valves_design_process_.php</a>.</p></li>
<li><p class="list-item1"><b><i>Information Flow: The Secret to Studio Structure</i> by Jesse Schell</b>. This was my keynote for the 2011 IGDA Leadership Summit. It goes deeper into teamwork for game development. <a class="nounder" href="http://www.design3.com">http://www.design3.com/industry-insight/igda-leadership-forum-2011/item/2329-jesse-schell-keynote-information-flow-the-secret-to-studio-structure</a>.</p></li>
</ul>
</section>
</section>
</body>
</html>